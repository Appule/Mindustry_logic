#作品番号4「熟練回収兵」
#指定したブロックから指定したアイテムを回収する。
#回収したアイテムは最寄りのコアへ搬送する。
#コアの指定アイテムをある程度満たした後はフリーになる。
#コアの指定アイテムがある程度減ると再雇用が行われる。




op rand rand 999999999 0                                    #           ↓↓初期値↓↓
set container container1                                    #                   container = 回収元ブロック as string
set Uthreshold 0.75                                         #                   Uthreshold = 溜めおき作業の上限
set Lthreshold 0.25                                         #                   Lthreshold = 溜めおき作業の下限
set delay 5                                                 #                   delay = 再雇用までの待ち時間
set item @null                                              #                   item = 回収アイテム as string
set UNIT @flare                                             #           ↑↑初期値↑↑ UNIT = 対象ユニット as string
jump 14 strictEqual core1 null                              ##goto A#D  ↓↓雇用・休暇判定↓↓
sensor corecap core1 @itemCapacity                          #
op mul corecap corecap Lthreshold                           #
sensor coreitem core1 item                                  #
jump 14 lessThan coreitem corecap                           ##goto A
wait delay                                                  #
jump 7 always 0 0                                           ##goto D    ↑↑雇用・休暇判定↑↑
ubind UNIT                                                  ##A         ↓↓フラグ指定↓↓
sensor preflag @unit @flag                                  #
jump 14 lessThan preflag 0                                  ##goto A
op add preflag preflag rand                                 #
op mul preflag preflag -1                                   #
ucontrol flag preflag 0 0 0 0                               #           ↑↑フラグ指定↑↑
sensor postflag @unit @flag                                 ##C         ↓↓フラグ確認↓↓
jump 14 notEqual postflag preflag                           ##goto A    ↑↑フラグ確認↑↑
sensor current @unit @totalItems                            #           ↓↓回収・搬入・解雇判定↓↓
sensor max @unit @itemCapacity                              #
jump 39 equal current 0                                     ##goto B
ulocate building core false 0 xc yc found core1             #
jump 20 equal found false                                   ##goto C
sensor corecap core1 @itemCapacity                          #
sensor coreitem core1 item                                  #
op mul corecap corecap Uthreshold                           #
jump 7 greaterThan coreitem corecap                         ##goto D    ↑↑回収・搬入・解雇判定↑↑
ucontrol within xc yc 6 w 0                                 #           ↓↓コアへ搬入↓↓
jump 36 equal w false                                       ##goto E
ucontrol itemDrop core1 current 0 0 0                       #
ucontrol idle 0 0 0 0 0                                     #
jump 20 always 0 0                                          ##goto C
ucontrol approach xc yc 5 0 0                               ##E
ucontrol boost true 0 0 0 0                                 #
jump 20 always 0 0                                          ##goto C    ↑↑コアへ搬入↑↑
jump 7 strictEqual container null                           ##goto D#B  ↓↓回収元から回収↓↓
sensor xc container @x                                      #
sensor yc container @y                                      #
ucontrol within xc yc 6 w 0                                 #
jump 47 equal w false                                       ##goto F
ucontrol itemTake container item max 0 0                    #
ucontrol idle 0 0 0 0 0                                     #
jump 20 always 0 0                                          ##goto C
ucontrol approach xc yc 5 0 0                               ##F
ucontrol boost true 0 0 0 0                                 #
jump 20 always 0 0                                          ##goto C    ↑↑回収元から回収↑↑